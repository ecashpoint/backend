version: '3.8'

services:
  # Base de datos para Kong
  kong-database:
    image: postgres:15
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Migraci√≥n inicial de Kong
  kong-migration:
    image: kong:3.4
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      kong-database:
        condition: service_healthy

  # Kong Gateway
  kong:
    image: kong:3.4
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000"  # Proxy HTTP
      - "8443:8443"  # Proxy HTTPS
      - "8001:8001"  # Admin API
      - "8002:8002"  # Admin GUI
    depends_on:
      kong-migration:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  # Konga - Admin UI para Kong
  konga:
    image: pantsel/konga
    environment:
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga
    ports:
      - "1337:1337"
    depends_on:
      - kong-database

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    command: start-dev
    ports:
      - "8180:8080"
    depends_on:
      - postgres-keycloak

  postgres-keycloak:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak-db:/var/lib/postgresql/data

  # Tus microservicios
  user-service:
    build: ./user-service
    environment:
      QUARKUS_HTTP_PORT: 8081
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-users:5432/userdb
    ports:
      - "8081:8081"
    depends_on:
      - postgres-users

  product-service:
    build: ./product-service
    environment:
      QUARKUS_HTTP_PORT: 8082
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-products:5432/productdb
    ports:
      - "8082:8082"
    depends_on:
      - postgres-products

  order-service:
    build: ./order-service
    environment:
      QUARKUS_HTTP_PORT: 8083
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-orders:5432/orderdb
    ports:
      - "8083:8083"
    depends_on:
      - postgres-orders

  # Bases de datos de microservicios
  postgres-users:
    image: postgres:15
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - users-db:/var/lib/postgresql/data

  postgres-products:
    image: postgres:15
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - products-db:/var/lib/postgresql/data

  postgres-orders:
    image: postgres:15
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - orders-db:/var/lib/postgresql/data

volumes:
  kong-db:
  konga-db:
  keycloak-db:
  users-db:
  products-db:
  orders-db: